        -:    0:Source:/home/jag/projects/pq/include/output/output.hpp
        -:    0:Graph:.build/tests/src/input/inputFileParsing/CMakeFiles/testParserManostat.dir/testParserManostat.cpp.gcno
        -:    0:Data:-
        -:    0:Runs:0
        -:    1:/*****************************************************************************
        -:    2:<GPL_HEADER>
        -:    3:
        -:    4:    PQ
        -:    5:    Copyright (C) 2023-now  Jakob Gamper
        -:    6:
        -:    7:    This program is free software: you can redistribute it and/or modify
        -:    8:    it under the terms of the GNU General Public License as published by
        -:    9:    the Free Software Foundation, either version 3 of the License, or
        -:   10:    (at your option) any later version.
        -:   11:
        -:   12:    This program is distributed in the hope that it will be useful,
        -:   13:    but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   14:    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   15:    GNU General Public License for more details.
        -:   16:
        -:   17:    You should have received a copy of the GNU General Public License
        -:   18:    along with this program.  If not, see <http://www.gnu.org/licenses/>.
        -:   19:
        -:   20:<GPL_HEADER>
        -:   21:******************************************************************************/
        -:   22:
        -:   23:#ifndef _OUTPUT_HPP_
        -:   24:
        -:   25:#define _OUTPUT_HPP_
        -:   26:
        -:   27:#include <fstream>              // for ofstream
        -:   28:#include <gtest/gtest_prod.h>   // for FRIEND_TEST
        -:   29:#include <string>               // for string
        -:   30:#include <string_view>          // for string_view
        -:   31:
        -:   32:class TestOutput_testSpecialSetFilename_Test;   // Friend test class
        -:   33:
        -:   34:namespace output
        -:   35:{
        -:   36:    /**
        -:   37:     * @class Output
        -:   38:     *
        -:   39:     * @brief Base class for output files
        -:   40:     *
        -:   41:     */
        -:   42:    class Output
        -:   43:    {
        -:   44:      protected:
        -:   45:        std::string   _fileName;
        -:   46:        std::ofstream _fp;
        -:   47:        int           _rank;
        -:   48:
        -:   49:        void openFile();
        -:   50:
        -:   51:      public:
function output::Output::Output(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) called 0 returned 0% blocks executed 0%
    #####:   52:        explicit Output(const std::string &filename) : _fileName(filename){};
    %%%%%:   52-block  0
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:   52-block  1
    $$$$$:   52-block  2
call    4 never executed
        -:   53:
        -:   54:        void setFilename(const std::string_view &);
        -:   55:        void close() { _fp.close(); }
        -:   56:
        -:   57:        FRIEND_TEST(::TestOutput, testSpecialSetFilename);
        -:   58:
        -:   59:        /********************************
        -:   60:         * standard getters and setters *
        -:   61:         ********************************/
        -:   62:
        -:   63:        std::string getFilename() const { return _fileName; }
        -:   64:    };
        -:   65:
        -:   66:}   // namespace output
        -:   67:
        -:   68:#endif   // _OUTPUT_HPP_
