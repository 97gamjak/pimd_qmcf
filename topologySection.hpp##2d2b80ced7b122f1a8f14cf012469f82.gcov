        -:    0:Source:/home/jag/projects/pq/include/input/topologyFileReader/topologySection.hpp
        -:    0:Graph:.build/src/input/topologyFileReader/CMakeFiles/topologyFileReader.dir/bondSection.cpp.gcno
        -:    0:Data:-
        -:    0:Runs:0
        -:    1:/*****************************************************************************
        -:    2:<GPL_HEADER>
        -:    3:
        -:    4:    PQ
        -:    5:    Copyright (C) 2023-now  Jakob Gamper
        -:    6:
        -:    7:    This program is free software: you can redistribute it and/or modify
        -:    8:    it under the terms of the GNU General Public License as published by
        -:    9:    the Free Software Foundation, either version 3 of the License, or
        -:   10:    (at your option) any later version.
        -:   11:
        -:   12:    This program is distributed in the hope that it will be useful,
        -:   13:    but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   14:    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   15:    GNU General Public License for more details.
        -:   16:
        -:   17:    You should have received a copy of the GNU General Public License
        -:   18:    along with this program.  If not, see <http://www.gnu.org/licenses/>.
        -:   19:
        -:   20:<GPL_HEADER>
        -:   21:******************************************************************************/
        -:   22:
        -:   23:#ifndef _TOPOLOGY_SECTION_HPP_
        -:   24:
        -:   25:#define _TOPOLOGY_SECTION_HPP_
        -:   26:
        -:   27:#include <iosfwd>   // for ifstream
        -:   28:#include <string>   // for string, allocator
        -:   29:#include <vector>   // for vector
        -:   30:
        -:   31:namespace engine
        -:   32:{
        -:   33:    class Engine;   // forward declaration
        -:   34:}
        -:   35:
        -:   36:namespace input::topology
        -:   37:{
        -:   38:    /**
        -:   39:     * @class TopologySection
        -:   40:     *
        -:   41:     * @brief base class for reading topology file sections
        -:   42:     *
        -:   43:     */
        -:   44:    class TopologySection
        -:   45:    {
        -:   46:      protected:
        -:   47:        int            _lineNumber;
        -:   48:        std::ifstream *_fp;
        -:   49:
        -:   50:      public:
    #####:   51:        virtual ~TopologySection() = default;
------------------
input::topology::TopologySection::~TopologySection():
function input::topology::TopologySection::~TopologySection() called 0 returned 0% blocks executed 0%
    #####:   51:        virtual ~TopologySection() = default;
    %%%%%:   51-block  0
call    0 never executed
call    1 never executed
------------------
input::topology::TopologySection::~TopologySection():
function input::topology::TopologySection::~TopologySection() called 0 returned 0% blocks executed 0%
    #####:   51:        virtual ~TopologySection() = default;
------------------
        -:   52:
        -:   53:        void process(std::vector<std::string> &lineElements, engine::Engine &);
        -:   54:
        -:   55:        virtual std::string keyword()                                                                = 0;
        -:   56:        virtual void        processSection(std::vector<std::string> &lineElements, engine::Engine &) = 0;
        -:   57:        virtual void        endedNormally(bool) const                                                = 0;
        -:   58:
        -:   59:        void setLineNumber(const int lineNumber) { _lineNumber = lineNumber; }
        -:   60:        void setFp(std::ifstream *fp) { _fp = fp; }
        -:   61:
        -:   62:        [[nodiscard]] int getLineNumber() const { return _lineNumber; }
        -:   63:    };
        -:   64:
        -:   65:}   // namespace input::topology
        -:   66:
        -:   67:#endif   // _TOPOLOGY_SECTION_HPP_
