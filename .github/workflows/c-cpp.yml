name: C/C++ CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Cache boost
        uses: actions/cache@v1.0.3
        id: cache-boost
        with:
          path: ~/boost
          key: libboost-all-dev

      - name: Install boost
        env:
          CACHE_HIT: ${{steps.cache-boost.outputs.cache-hit}}
        run: |
          if [[ "$CACHE_HIT" == 'nevertrue' ]]; then
            sudo cp --force --recursive ~/boost/* /
          else
            sudo apt-get update && sudo apt-get install -yq libboost-all-dev
            mkdir -p ~/boost
            for dep in libboost-all-dev; do
              dpkg -L $dep | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/boost/
            done
          fi

      - name: install gcc13
        run: |
          sudo apt update
          sudo apt install gcc-13 g++-13
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 1
        shell: bash

      - name: install gcovr
        run: |
          sudo apt-get install gcovr
        shell: bash

      - name: Create build directory and run CMake
        run: cmake -S . -B build -G "Unix Makefiles"
        env:
          CC: gcc-13
          CXX: g++-13

      - name: Build Project
        run: cmake --build build --target all -- -j20

      - name: Test Project
        run: |
          cd build
          make coverage_xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          gcov: true
          gcov_executable: gcov-13
          token: ${{ secrets.CODECOV }}

      # - name: Generate and send a code coverage report to Coveralls
      #   uses: threeal/gcovr-action@latest
      #   with:
      #     coveralls-send: true
      #     github-token: ${{ secrets.COVERALLS_REPO_TOKEN }}

      # - name: install cpp-coveralls
      #   run: |
      #     sudo apt-get install python3-pip
      #     pip3 install --user cpp-coveralls
      #   shell: bash

      # - name: Generate and send a code coverage report to Coveralls
      #   run: |
      #     cd build
      #     coveralls --gcov gcov-13 --exclude lib --exclude tests --exclude build --exclude _deps --gcov-options '\-lp'
      #   shell: bash
