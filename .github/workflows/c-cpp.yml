name: C/C++ CI

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]
    

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Cache boost
      uses: actions/cache@v1.0.3
      id: cache-boost
      with:
        path: "~/boost"
        key: libboost-all-dev
  
    - name: Install boost
      env:
        CACHE_HIT: ${{steps.cache-boost.outputs.cache-hit}}
      run: |
        if [[ "$CACHE_HIT" == 'true' ]]; then
          sudo cp --force --recursive ~/boost/* /
        else
          sudo apt-get update && sudo apt-get install -yq libboost-all-dev
          mkdir -p ~/boost
          for dep in libboost-all-dev; do
            dpkg -L $dep | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/boost/
          done
        fi
      
    - name: "Create build directory and run CMake"
      run: cmake -S . -B build -G "Unix Makefiles"

    - name: "Build Project" 
      run: cmake --build build --target all -- -j4

    - name: "Test Project"
      run: |
        cd build
        make test

    - name: Generate a code coverage report
      uses: threeal/gcovr-action@latest

    - name: Generate a code coverage report
      uses: threeal/gcovr-action@latest
      with:
        excludes: |
          tests/*
          apps/*
          benchmarks/*
          tools/*
          _deps/*
          external/*

    - name: Build and test this project
      run: |
        cmake . -B build -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++
        cmake --build build
        ctest --test-dir build

    - name: Generate a code coverage report
      uses: threeal/gcovr-action@latest
      with:
        gcov-executable: llvm-cov gcov
