        -:    0:Source:/home/jag/projects/pq/tests/include/input/testInputFileReader.hpp
        -:    0:Graph:.build/tests/src/input/inputFileParsing/CMakeFiles/testParserManostat.dir/testParserManostat.cpp.gcno
        -:    0:Data:-
        -:    0:Runs:0
        -:    1:/*****************************************************************************
        -:    2:<GPL_HEADER>
        -:    3:
        -:    4:    PQ
        -:    5:    Copyright (C) 2023-now  Jakob Gamper
        -:    6:
        -:    7:    This program is free software: you can redistribute it and/or modify
        -:    8:    it under the terms of the GNU General Public License as published by
        -:    9:    the Free Software Foundation, either version 3 of the License, or
        -:   10:    (at your option) any later version.
        -:   11:
        -:   12:    This program is distributed in the hope that it will be useful,
        -:   13:    but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   14:    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   15:    GNU General Public License for more details.
        -:   16:
        -:   17:    You should have received a copy of the GNU General Public License
        -:   18:    along with this program.  If not, see <http://www.gnu.org/licenses/>.
        -:   19:
        -:   20:<GPL_HEADER>
        -:   21:******************************************************************************/
        -:   22:
        -:   23:#ifndef _TEST_INPUT_FILE_READER_H_
        -:   24:
        -:   25:#define _TEST_INPUT_FILE_READER_H_
        -:   26:
        -:   27:#include "engine.hpp"            // for Engine
        -:   28:#include "inputFileReader.hpp"   // for InputFileReader
        -:   29:
        -:   30:#include <cstdio>          // for remove
        -:   31:#include <gtest/gtest.h>   // for Test
        -:   32:#include <string>          // for allocator, string
        -:   33:
        -:   34:/**
        -:   35: * @class TestInputFileReader
        -:   36: *
        -:   37: * @brief Test fixture for testing the InputFileReader class.
        -:   38: *
        -:   39: */
        -:   40:class TestInputFileReader : public ::testing::Test
        -:   41:{
        -:   42:  protected:
function TestInputFileReader::SetUp() called 0 returned 0% blocks executed 0%
    #####:   43:    void SetUp() override
        -:   44:    {
    #####:   45:        _engine          = new engine::Engine();
    %%%%%:   45-block  0
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    $$$$$:   45-block  1
branch  4 never executed (fallthrough)
branch  5 never executed
    $$$$$:   45-block  2
call    6 never executed
    #####:   46:        _inputFileReader = new input::InputFileReader("input.in", *_engine);
    %%%%%:   46-block  0
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed (throw)
    $$$$$:   46-block  1
    $$$$$:   46-block  2
branch  5 never executed (fallthrough)
branch  6 never executed
    $$$$$:   46-block  3
call    7 never executed
    #####:   47:    }
    %%%%%:   47-block  0
        -:   48:
function TestInputFileReader::TearDown() called 0 returned 0% blocks executed 0%
    #####:   49:    void TearDown() override
        -:   50:    {
    #####:   51:        delete _inputFileReader;
    %%%%%:   51-block  0
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:   51-block  1
call    2 never executed
call    3 never executed
    #####:   52:        removeFile();
    %%%%%:   52-block  0
call    0 never executed
    #####:   53:    }
        -:   54:
        -:   55:    std::string _fileName = "";
        -:   56:
        -:   57:    engine::Engine             *_engine;
        -:   58:    input::InputFileReader *_inputFileReader;
        -:   59:
function TestInputFileReader::removeFile() const called 0 returned 0% blocks executed 0%
    #####:   60:    void removeFile() const { std::remove(_fileName.c_str()); }
    %%%%%:   60-block  0
call    0 never executed
call    1 never executed
        -:   61:};
        -:   62:
        -:   63:#endif
