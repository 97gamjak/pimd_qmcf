        -:    0:Source:/home/jag/projects/pq/include/manostat/manostat.hpp
        -:    0:Graph:.build/tests/src/input/inputFileParsing/CMakeFiles/testParserManostat.dir/testParserManostat.cpp.gcno
        -:    0:Data:-
        -:    0:Runs:0
        -:    1:/*****************************************************************************
        -:    2:<GPL_HEADER>
        -:    3:
        -:    4:    PQ
        -:    5:    Copyright (C) 2023-now  Jakob Gamper
        -:    6:
        -:    7:    This program is free software: you can redistribute it and/or modify
        -:    8:    it under the terms of the GNU General Public License as published by
        -:    9:    the Free Software Foundation, either version 3 of the License, or
        -:   10:    (at your option) any later version.
        -:   11:
        -:   12:    This program is distributed in the hope that it will be useful,
        -:   13:    but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   14:    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   15:    GNU General Public License for more details.
        -:   16:
        -:   17:    You should have received a copy of the GNU General Public License
        -:   18:    along with this program.  If not, see <http://www.gnu.org/licenses/>.
        -:   19:
        -:   20:<GPL_HEADER>
        -:   21:******************************************************************************/
        -:   22:
        -:   23:#ifndef _MANOSTAT_HPP_
        -:   24:
        -:   25:#define _MANOSTAT_HPP_
        -:   26:
        -:   27:#include "staticMatrix3x3.hpp"   // for tensor3D
        -:   28:
        -:   29:namespace physicalData
        -:   30:{
        -:   31:    class PhysicalData;   // forward declaration
        -:   32:}
        -:   33:
        -:   34:namespace simulationBox
        -:   35:{
        -:   36:    class SimulationBox;   // forward declaration
        -:   37:}
        -:   38:
        -:   39:namespace manostat
        -:   40:{
        -:   41:    /**
        -:   42:     * @class Manostat
        -:   43:     *
        -:   44:     * @brief Manostat is a base class for all manostats
        -:   45:     *
        -:   46:     */
        -:   47:    class Manostat
        -:   48:    {
        -:   49:      protected:
        -:   50:        linearAlgebra::tensor3D _pressureTensor = {0.0};
        -:   51:        double                  _pressure;
        -:   52:        double                  _targetPressure;   // no default value, must be set
        -:   53:
        -:   54:      public:
function manostat::Manostat::Manostat() called 0 returned 0% blocks executed 0%
    #####:   55:        Manostat() = default;
    %%%%%:   55-block  0
call    0 never executed
        -:   56:        explicit Manostat(const double targetPressure) : _targetPressure(targetPressure) {}
        -:   57:        virtual ~Manostat() = default;
        -:   58:
        -:   59:        void         calculatePressure(const simulationBox::SimulationBox &, physicalData::PhysicalData &);
        -:   60:        virtual void applyManostat(simulationBox::SimulationBox &, physicalData::PhysicalData &);
        -:   61:    };
        -:   62:
        -:   63:}   // namespace manostat
        -:   64:
        -:   65:#endif   // _MANOSTAT_HPP_
