        -:    0:Source:/home/jag/projects/pq/include/thermostat/thermostat.hpp
        -:    0:Graph:.build/tests/src/input/inputFileParsing/CMakeFiles/testParserManostat.dir/testParserManostat.cpp.gcno
        -:    0:Data:-
        -:    0:Runs:0
        -:    1:/*****************************************************************************
        -:    2:<GPL_HEADER>
        -:    3:
        -:    4:    PQ
        -:    5:    Copyright (C) 2023-now  Jakob Gamper
        -:    6:
        -:    7:    This program is free software: you can redistribute it and/or modify
        -:    8:    it under the terms of the GNU General Public License as published by
        -:    9:    the Free Software Foundation, either version 3 of the License, or
        -:   10:    (at your option) any later version.
        -:   11:
        -:   12:    This program is distributed in the hope that it will be useful,
        -:   13:    but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   14:    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   15:    GNU General Public License for more details.
        -:   16:
        -:   17:    You should have received a copy of the GNU General Public License
        -:   18:    along with this program.  If not, see <http://www.gnu.org/licenses/>.
        -:   19:
        -:   20:<GPL_HEADER>
        -:   21:******************************************************************************/
        -:   22:
        -:   23:#ifndef _THERMOSTAT_HPP_
        -:   24:
        -:   25:#define _THERMOSTAT_HPP_
        -:   26:
        -:   27:namespace physicalData
        -:   28:{
        -:   29:    class PhysicalData;   // forward declaration
        -:   30:}
        -:   31:
        -:   32:namespace simulationBox
        -:   33:{
        -:   34:    class SimulationBox;   // forward declaration
        -:   35:}
        -:   36:
        -:   37:/**
        -:   38: * @namespace thermostat
        -:   39: */
        -:   40:namespace thermostat
        -:   41:{
        -:   42:    /**
        -:   43:     * @class Thermostat
        -:   44:     *
        -:   45:     * @brief Thermostat is a base class for all thermostats
        -:   46:     *
        -:   47:     * @details it provides a dummy function applyThermostat() which does only calculate the temperature
        -:   48:     *
        -:   49:     */
        -:   50:    class Thermostat
        -:   51:    {
        -:   52:      protected:
        -:   53:        double _temperature       = 0.0;
        -:   54:        double _targetTemperature = 0.0;
        -:   55:
        -:   56:      public:
function thermostat::Thermostat::Thermostat() called 0 returned 0% blocks executed 0%
    #####:   57:        Thermostat() = default;
        -:   58:        explicit Thermostat(const double targetTemperature) : _targetTemperature(targetTemperature) {}
        -:   59:        virtual ~Thermostat() = default;
        -:   60:
        -:   61:        virtual void applyThermostat(simulationBox::SimulationBox &, physicalData::PhysicalData &);
        -:   62:        virtual void applyThermostatHalfStep(simulationBox::SimulationBox &, physicalData::PhysicalData &){};
        -:   63:        virtual void applyThermostatOnForces(simulationBox::SimulationBox &){};
        -:   64:    };
        -:   65:
        -:   66:}   // namespace thermostat
        -:   67:
        -:   68:#endif   // _THERMOSTAT_HPP_
