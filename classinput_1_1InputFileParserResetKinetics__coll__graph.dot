digraph "input::InputFileParserResetKinetics"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{input::InputFileParserReset\lKinetics\n||+ InputFileParserResetKinetics()\l+ parseNScale()\l+ parseFScale()\l+ parseNReset()\l+ parseFReset()\l+ parseNResetAngular()\l+ parseFResetAngular()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Parses the reset kinetics commands in the input file."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{input::InputFileParser\n||+ InputFileParser()\l+ addKeyword()\l+ getKeywordFuncMap()\l+ getKeywordRequiredMap()\l+ getKeywordCountMap()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classinput_1_1InputFileParser.html",tooltip="Base class for parsing the input file."];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" #_engine" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{engine::Engine\n||+ Engine()\l+ ~Engine()\l+ run()\l+ takeStep()\l+ writeOutput()\l+ isForceFieldNonCoulombics\lActivated()\l+ isGuffActivated()\l+ isCellListActivated()\l+ isConstraintsActivated()\l+ isIntraNonBondedActivated()\land 37 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classengine_1_1Engine.html",tooltip="Contains all the information needed to run the simulation."];
  Node4 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #_manostat" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{std::unique_ptr\< manostat\l::Manostat \>\n|+ ptr\l|+ operator-\>()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #_integrator" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{std::unique_ptr\< integrator\l::Integrator \>\n|+ ptr\l|+ operator-\>()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #_thermostat" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{std::unique_ptr\< thermostat\l::Thermostat \>\n|+ ptr\l|+ operator-\>()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #_cellList" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{simulationBox::CellList\n||+ setup()\l+ updateCellList()\l+ determineCellSize()\l+ determineCellBoundaries()\l+ checkCoulombCutoff()\l+ addNeighbouringCells()\l+ addNeighbouringCellPointers()\l+ addMoleculesToCells()\l+ getCellIndex()\l+ getCellIndexOfAtom()\land 12 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsimulationBox_1_1CellList.html",tooltip="CellList is a class for cell list."];
  Node8 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #_simulationBox" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{simulationBox::SimulationBox\n||+ copy()\l+ checkCoulombRadiusCutOff()\l+ setupExternalToInternalGlobal\lVdwTypesMap()\l+ calculateDegreesOfFreedom()\l+ calculateTotalMass()\l+ calculateCenterOfMass()\l+ calculateCenterOfMassMolecules()\l+ calculateDensity()\l+ setPartialChargesOfMolecules\lFromMoleculeTypes()\l+ initPositions()\land 58 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsimulationBox_1_1SimulationBox.html",tooltip="contains all particles and the simulation box"];
  Node9 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #_step" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{size_t\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node10 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #_resetKinetics" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{resetKinetics::ResetKinetics\n||+ ResetKinetics()\l+ ResetKinetics()\l+ reset()\l+ resetTemperature()\l+ resetMomentum()\l+ resetAngularMomentum()\l+ setTemperature()\l+ setMomentum()\l+ setAngularMomentum()\l+ getNStepsTemperatureReset()\l+ getFrequencyTemperatureReset()\l+ getNStepsMomentumReset()\l+ getFrequencyMomentumReset()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classresetKinetics_1_1ResetKinetics.html",tooltip="base class for the reset of the kinetics - represents also class for no reset"];
  Node11 -> Node10 [color="grey25",fontsize="10",style="solid",label=" #_temperature" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{double\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node9 -> Node10 [color="grey25",fontsize="10",style="solid",label=" #_frequencyAngularReset\n#_frequencyMomentumReset\n#_frequencyTemperatureReset\n#_nStepsAngularReset\n#_nStepsMomentumReset\n#_nStepsTemperatureReset" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 -> Node10 [color="grey25",fontsize="10",style="solid",label=" #_angularMomentum\n#_momentum" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 [label="{Vector3D\< double \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node13 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #_forceField" ,arrowhead="odiamond",fontname="Helvetica"];
  Node13 [label="{forceField::ForceField\n||+ calculateBondedInteractions()\l+ calculateBondInteractions()\l+ calculateAngleInteractions()\l+ calculateDihedralInteractions()\l+ calculateImproperDihedral\lInteractions()\l+ findBondTypeById()\l+ findAngleTypeById()\l+ findDihedralTypeById()\l+ findImproperDihedralType\lById()\l+ activateNonCoulombic()\land 24 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classforceField_1_1ForceField.html",tooltip="force field object containing all force field information"];
  Node14 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #_engineOutput" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 [label="{engine::EngineOutput\n||+ writeEnergyFile()\l+ writeMomentumFile()\l+ writeXyzFile()\l+ writeVelFile()\l+ writeForceFile()\l+ writeChargeFile()\l+ writeInfoFile()\l+ writeRstFile()\l+ writeRingPolymerRstFile()\l+ writeRingPolymerXyzFile()\land 20 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classengine_1_1EngineOutput.html",tooltip="contains unique pointers to all of the output classes"];
  Node15 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #_intraNonBonded" ,arrowhead="odiamond",fontname="Helvetica"];
  Node15 [label="{intraNonBonded::IntraNon\lBonded\n||+ calculate()\l+ fillIntraNonBondedMaps()\l+ findIntraNonBondedContainer\lByMolType()\l+ addIntraNonBondedContainer()\l+ addIntraNonBondedMap()\l+ activate()\l+ deactivate()\l+ isActive()\l+ setNonCoulombPotential()\l+ setCoulombPotential()\l+ getIntraNonBondedType()\l+ getIntraNonBondedContainers()\l+ getIntraNonBondedMaps()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classintraNonBonded_1_1IntraNonBonded.html",tooltip="base class for intra non bonded interactions"];
  Node16 -> Node15 [color="grey25",fontsize="10",style="solid",label=" #_nonCoulombPotential" ,arrowhead="odiamond",fontname="Helvetica"];
  Node16 [label="{std::shared_ptr\< potential\l::NonCoulombPotential \>\n|+ ptr\l|+ operator-\>()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node17 -> Node15 [color="grey25",fontsize="10",style="solid",label=" #_intraNonBondedType" ,arrowhead="odiamond",fontname="Helvetica"];
  Node17 [label="{IntraNonBondedType\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node18 -> Node15 [color="grey25",fontsize="10",style="solid",label=" #_intraNonBondedContainers" ,arrowhead="odiamond",fontname="Helvetica"];
  Node18 [label="{std::vector\< IntraNonBonded\lContainer \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node19 -> Node18 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node19 [label="{intraNonBonded::IntraNon\lBondedContainer\n||+ IntraNonBondedContainer()\l+ getMolType()\l+ getAtomIndices()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classintraNonBonded_1_1IntraNonBondedContainer.html",tooltip="represents a container for a single intra non bonded type"];
  Node20 -> Node15 [color="grey25",fontsize="10",style="solid",label=" #_isActivated" ,arrowhead="odiamond",fontname="Helvetica"];
  Node20 [label="{bool\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node21 -> Node15 [color="grey25",fontsize="10",style="solid",label=" #_coulombPotential" ,arrowhead="odiamond",fontname="Helvetica"];
  Node21 [label="{std::shared_ptr\< potential\l::CoulombPotential \>\n|+ ptr\l|+ operator-\>()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node22 -> Node15 [color="grey25",fontsize="10",style="solid",label=" #_intraNonBondedMaps" ,arrowhead="odiamond",fontname="Helvetica"];
  Node22 [label="{std::vector\< intraNonBonded\l::IntraNonBondedMap \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node23 -> Node22 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node23 [label="{intraNonBonded::IntraNon\lBondedMap\n||+ IntraNonBondedMap()\l+ calculate()\l+ calculateSingleInteraction()\l+ getIntraNonBondedType()\l+ getMolecule()\l+ getAtomIndices()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classintraNonBonded_1_1IntraNonBondedMap.html",tooltip="defines a map for a single molecule to its intra non bonded interactions"];
  Node24 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #_timings" ,arrowhead="odiamond",fontname="Helvetica"];
  Node24 [label="{timings::Timings\n||+ beginTimer()\l+ endTimer()\l+ calculateElapsedTime()\l+ calculateLoopTime()\l+ getStepCount()\l+ setStepCount()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classtimings_1_1Timings.html",tooltip="Stores all timings information."];
  Node25 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #_averagePhysicalData\n#_physicalData" ,arrowhead="odiamond",fontname="Helvetica"];
  Node25 [label="{physicalData::PhysicalData\n||+ calculateTemperature()\l+ calculateKinetics()\l+ changeKineticVirialToAtomic()\l+ updateAverages()\l+ makeAverages()\l+ reset()\l+ addIntraCoulombEnergy()\l+ addIntraNonCoulombEnergy()\l+ getTotalEnergy()\l+ resizeRingPolymerEnergy()\land 54 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classphysicalData_1_1PhysicalData.html",tooltip="PhysicalData is a class for output data storage."];
  Node26 -> Node25 [color="grey25",fontsize="10",style="solid",label=" +getKineticEnergyVirialVector" ,arrowhead="odiamond",fontname="Helvetica"];
  Node26 [label="{StaticMatrix3x3\< double \>)\>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node27 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #_potential" ,arrowhead="odiamond",fontname="Helvetica"];
  Node27 [label="{std::unique_ptr\< potential\l::Potential \>\n|+ ptr\l|+ operator-\>()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node28 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #_virial" ,arrowhead="odiamond",fontname="Helvetica"];
  Node28 [label="{std::unique_ptr\< virial\l::Virial \>\n|+ ptr\l|+ operator-\>()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node29 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #_constraints" ,arrowhead="odiamond",fontname="Helvetica"];
  Node29 [label="{constraints::Constraints\n||+ calculateConstraintBondRefs()\l+ applyShake()\l+ applyRattle()\l+ activate()\l+ deactivate()\l+ isActive()\l+ addBondConstraint()\l+ getBondConstraints()\l+ getShakeMaxIter()\l+ getRattleMaxIter()\land 6 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classconstraints_1_1Constraints.html",tooltip="class containing all constraints"];
  Node30 -> Node2 [color="grey25",fontsize="10",style="solid",label=" #_keywordCountMap" ,arrowhead="odiamond",fontname="Helvetica"];
  Node30 [label="{std::map\< std::string,\l int \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node31 -> Node30 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node31 [label="{int\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node32 -> Node30 [color="grey25",fontsize="10",style="solid",label=" +keys" ,arrowhead="odiamond",fontname="Helvetica"];
  Node32 [label="{std::string\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node33 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node33 [label="{std::basic_string\<\l Char \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node34 -> Node2 [color="grey25",fontsize="10",style="solid",label=" #_keywordRequiredMap" ,arrowhead="odiamond",fontname="Helvetica"];
  Node34 [label="{std::map\< std::string,\l bool \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node20 -> Node34 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node32 -> Node34 [color="grey25",fontsize="10",style="solid",label=" +keys" ,arrowhead="odiamond",fontname="Helvetica"];
  Node35 -> Node2 [color="grey25",fontsize="10",style="solid",label=" #_keywordFuncMap" ,arrowhead="odiamond",fontname="Helvetica"];
  Node35 [label="{std::map\< std::string,\l ParseFunc \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node36 -> Node35 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node36 [label="{ParseFunc\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node32 -> Node35 [color="grey25",fontsize="10",style="solid",label=" +keys" ,arrowhead="odiamond",fontname="Helvetica"];
}
